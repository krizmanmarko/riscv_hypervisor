================================================================================
Traps
================================================================================

1. Interrupts (can happen anytime - asynchronous)
2. Exceptions (only when executing instructions - synchronous)

Important registers (listed only for M-mode):
	- mtvec
	- mcause (MSB == 1 ? interrupt : exception)
	- mepc
	- mtval
	- mtval2


================================================================================
Interrupts
================================================================================

3 types:
	- software (CLINT): when clint.mswi.msip = 1
	- timer (CLINT): when clint.mtimer.mtime >= clint.mtimer.mtimecmp
	- external (PLIC): when external source asserts interrupt


Interrupt registers
===================

mideleg, hideleg
mip, mie
sip, sie
hip, hie, hvip, hgeip, hgeie
vsip, vsie

Extra notes
-----------
1. interrupt delegation
	mideleg: M -> HS
	hideleg: HS -> VS

2. enter VS-mode interrupt
	V == 1 (before the trap)
	check mideleg -> check hideleg -> interrupt handler in VS-mode

3. sie/sip and hie/hip bits are mutually exclusive
	sie | hie -> hypervisor interrupt enable
	sip | hip -> hypervisor interrupt pending
	sie ^ hie == 0
	sip ^ hip == 0

Comprehensive Interrupt Handling
--------------------------------

Interrupt happens
Interrupt arrives to M-mode
	1. check mstatus
		mstatus.MIE = 0		<- interrupts are disabled
		mstatus.MIE = 1		<- interrupts are enabled
	2. check mideleg
		mideleg not set
			goto 3
		mideleg is set
			handle in HS-mode
	3. check mie

Interrupt arrives to HS-mode
	1. check sstatus
		sstatus.SIE = 0		<- interrupts are disabled
		sstatus.SIE = 1		<- interrupts are enabled
	2. check hideleg


================================================================================
Exceptions
================================================================================

enter VS-mode exception handler:
	check medeleg -> check hedeleg -> exception handler in VS-mode

Legend:
	'-': standard risc-v
	'+': hypervisor extension

1. instruction
    - instruction address misaligned (0)
    - instruction access fault (1)
    - illegall instruction (2)
    - breakpoint (3)
    + virtual instruction (22)

2. load/store
    - load address misaligned (4)
    - load access fault (5)
    - store or amo address misaligned (6)
    - store or amo access fault (7)

3. ecall
    - ecall from U-mode (8)
    - ecall from HS-mode (9)
    + ecall from VS-mode (10)
    - ecall from M-mode (11)

4. page fault
    - instruction page fault (12)
    - load page fault (13)
    - store or amo page fault (15)
    + instruction guest page fault (20)
    + load guest page fault (21)
    + store or amo guest page fault (23)
